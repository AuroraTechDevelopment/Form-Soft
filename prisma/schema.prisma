generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String       @id @default(uuid()) @db.Uuid
  email       String       @unique
  password    String
  username    String       @unique
  image       String?
  status      UserStatus   @default(UNVERIFIED)
  role        UserRole     @default(USER)
  preferences Json?
  createdAt   DateTime     @default(now())
  lastLogin   DateTime     @updatedAt
  feedbacks   Feedback[]
  forms       Form[]
  reports     Report[]
  submissions Submission[]

  @@map("users")
}

model Form {
  id              String       @id @default(uuid())
  userID          String       @db.Uuid
  title           String
  description     String
  questions       Json
  manySubmission  Boolean
  editable        Boolean
  status          FormStatus
  viewCount       Int
  submissionCount Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  deadline        DateTime
  user            User         @relation(fields: [userID], references: [id])
  reports         Report[]
  submissions     Submission[]

  @@map("forms")
}

model Submission {
  id        String   @id @default(uuid())
  formID    String
  userID    String?  @db.Uuid
  answers   Json
  createdAt DateTime @default(now())
  form      Form     @relation(fields: [formID], references: [id])
  user      User?    @relation(fields: [userID], references: [id])

  @@map("submissions")
}

model Feedback {
  id        String   @id @default(uuid())
  userID    String?  @db.Uuid
  category  String
  comment   String
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userID], references: [id])

  @@map("feedbacks")
}

model Report {
  id       String   @id @default(uuid())
  formID   String
  userID   String?  @db.Uuid
  category String
  comment  String
  createAt DateTime @default(now())
  form     Form     @relation(fields: [formID], references: [id])
  user     User?    @relation(fields: [userID], references: [id])

  @@map("reports")
}

enum UserStatus {
  VERIFIED
  UNVERIFIED
  INCOMPLETE
  OPEN
  CLOSED
  DEACTIVATED
  ARCHIVED
  DELETED
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
}

enum FormStatus {
  DRAFT
  ARCHIVED
  OPENED
  CLOSED
}
